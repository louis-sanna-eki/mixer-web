/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/sVmjea8V0iW
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";

import { Button } from "@/components/ui/button";

export function GenerativeRadio() {
  return (
    <div className="flex flex-col h-screen bg-gray-900 text-white">
      <header className="bg-gray-800 py-4 px-6 flex items-center justify-between">
        <h1 className="text-2xl font-bold">Generative Radio</h1>
        {/* <div className="flex items-center space-x-4">
          <Button size="icon" variant="ghost">
            <HeartIcon className="w-6 h-6" />
            <span className="sr-only">Liked Tracks</span>
          </Button>
          <Button size="icon" variant="ghost">
            <SettingsIcon className="w-6 h-6" />
            <span className="sr-only">Settings</span>
          </Button>
        </div> */}
      </header>
      <div className="flex-1 flex flex-col items-center justify-center px-6 py-12 space-y-8">
        <div className="max-w-md w-full space-y-4">
          <h2 className="text-3xl font-bold">Pick a Topic</h2>
          <div className="grid grid-cols-3 gap-4">
            <Button className="px-6 py-3 rounded-lg" variant="outline">
              <span className="text-lg font-semibold">AI</span>
            </Button>
            <Button className="px-6 py-3 rounded-lg" variant="outline">
              <span className="text-lg font-semibold">Sport</span>
            </Button>
            <Button className="px-6 py-3 rounded-lg" variant="outline">
              <span className="text-lg font-semibold">Tech</span>
            </Button>
          </div>
        </div>
        <AudioPlayer />
      </div>
    </div>
  );
}

import React, { useRef, useState } from "react";

function AudioPlayer() {
  const audioRef = useRef(null);
  const [isPlaying, setIsPlaying] = useState(false);
  const [currentTime, setCurrentTime] = useState(0);
  const [duration, setDuration] = useState(0);

  const togglePlayPause = () => {
    if (audioRef.current === null) return;
    if (isPlaying) {
      (audioRef.current as any).pause();
    } else {
      (audioRef.current as any).play();
    }
    setIsPlaying(!isPlaying);
  };

  const handleTimeUpdate = () => {
    if (audioRef.current === null) return;
    setCurrentTime((audioRef.current as any).currentTime);
  };

  const handleLoadedMetadata = () => {
    if (audioRef.current === null) return;
    setDuration((audioRef.current as any).duration);
  };

  return (
    <div className="max-w-md w-full space-y-4">
      <audio
        ref={audioRef}
        src="/sad-guitar-melody.wav"
        onTimeUpdate={handleTimeUpdate}
        onLoadedMetadata={handleLoadedMetadata}
      />

      <div className="flex items-center justify-between">
        <div className="flex items-center space-x-4">
          <img
            alt="Album Cover"
            className="rounded-lg"
            height={64}
            src="/placeholder.svg"
            style={{
              aspectRatio: "64/64",
              objectFit: "cover",
            }}
            width={64}
          />
          <div>
            <h3 className="text-xl font-bold">Floating Leaves</h3>
            <p className="text-gray-400">Ambient Soundscape</p>
          </div>
        </div>
        <div className="flex items-center space-x-4">
          <Button size="icon" variant="ghost">
            <HeartIcon className="w-6 h-6" />
            <span className="sr-only">Like</span>
          </Button>
          <Button size="icon" variant="ghost">
            <ThumbsDownIcon className="w-6 h-6" />
            <span className="sr-only">Dislike</span>
          </Button>
        </div>
      </div>
      <div className="flex items-center justify-center w-full">
        <Button size="icon" variant="ghost" onClick={togglePlayPause}>
          {isPlaying ? (
            <PauseIcon className="w-6 h-6" />
          ) : (
            <PlayIcon className="w-6 h-6" />
          )}
          <span className="sr-only">Play/Pause</span>
        </Button>
      </div>
    </div>
  );
}

function FastForwardIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="13 19 22 12 13 5 13 19" />
      <polygon points="2 19 11 12 2 5 2 19" />
    </svg>
  );
}

function HeartIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z" />
    </svg>
  );
}

function PlayIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="6 3 20 12 6 21 6 3" />
    </svg>
  );
}

function PauseIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect x="6" y="4" width="4" height="16" />
      <rect x="14" y="4" width="4" height="16" />
    </svg>
  );
}

function RewindIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="11 19 2 12 11 5 11 19" />
      <polygon points="22 19 13 12 22 5 22 19" />
    </svg>
  );
}

// function SettingsIcon(props: any) {
//   return (
//     <svg
//       {...props}
//       xmlns="http://www.w3.org/2000/svg"
//       width="24"
//       height="24"
//       viewBox="0 0 24 24"
//       fill="none"
//       stroke="currentColor"
//       strokeWidth="2"
//       strokeLinecap="round"
//       strokeLinejoin="round"
//     >
//       <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
//       <circle cx="12" cy="12" r="3" />
//     </svg>
//   )
// }

function ThumbsDownIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M17 14V2" />
      <path d="M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22h0a3.13 3.13 0 0 1-3-3.88Z" />
    </svg>
  );
}
